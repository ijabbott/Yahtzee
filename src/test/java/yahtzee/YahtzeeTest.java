/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package yahtzee;

import org.junit.Before;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class YahtzeeTest {
    private Yahtzee yahtzee;
    private List<Integer> dice;

    @Before
    public void setUp() {
        yahtzee = new Yahtzee();
        dice = new ArrayList<>();
    }

    @Test
    public void GivenChanceCategoryReturnsSumOfAllDice() {
        final int sumOfAllDice = 5;

        dice = yahtzee.populateDice(1, 1, 1, 1, 1);
        int score = yahtzee.scoreChance(dice);

        assertEquals(sumOfAllDice, score);
    }

    @Test
    public void GivenDiceAllTheSameYahtzeeCategoryReturns50() {
        final int yahtzeeScore = 50;

        dice = yahtzee.populateDice(1, 1, 1, 1, 1);

        int score = yahtzee.scoreYahtzee(dice);
        assertEquals(yahtzeeScore, score);
    }

    @Test
    public void GivenDiceOneOrMoreNotSameYahtzeeCategoryReturns0() {
        final int doesNotMeetCategoryRequirements = 0;

        dice = yahtzee.populateDice(2, 1, 1, 1, 1);

        int score = yahtzee.scoreYahtzee(dice);
        assertEquals(doesNotMeetCategoryRequirements, score);
    }

    @Test
    public void GivenDuplicateOnesNumbersCategoryReturnsSumOfOnes() {
        final int sumOfAllDice = 5;

        dice = yahtzee.populateDice(1, 1, 1, 1, 1);

        int score = yahtzee.scoreOnes(dice);
        assertEquals(sumOfAllDice, score);
    }

    @Test
    public void GivenDuplicateTwosNumbersCategoryReturnsSumOfTwos(){
        final int sumOfAllDice = 4;
        dice = yahtzee.populateDice(2, 2, 1, 1, 1);
        int score = yahtzee.scoreTwos(dice);
        assertEquals(sumOfAllDice, score);
    }

    @Test
    public void GivenDuplicateThreesNumbersCategoryReturnsSumOfThrees(){
        final int sumOfAllDice = 6;
        dice = yahtzee.populateDice(3, 3, 1, 1, 1);
        int score = yahtzee.scoreThrees(dice);
        assertEquals(sumOfAllDice, score);
    }

    @Test
    public void GivenDuplicateFoursNumbersCategoryReturnsSumOfFours(){
        final int sumOfAllDice = 8;
        dice = yahtzee.populateDice(4, 4, 1, 1, 1);
        int score = yahtzee.scoreFours(dice);
        assertEquals(sumOfAllDice, score);
    }

    @Test
    public void GivenDuplicateFivesNumbersCategoryReturnsSumOfFives(){
        final int sumOfAllDice = 10;
        dice = yahtzee.populateDice(5, 5, 1, 1, 1);
        int score = yahtzee.scoreFives(dice);
        assertEquals(sumOfAllDice, score);
    }

    @Test
    public void GivenDuplicateSixesNumbersCategoryReturnsSumOfSixes(){
        final int sumOfAllDice = 12;
        dice = yahtzee.populateDice(6, 6, 1, 1, 1);
        int score = yahtzee.scoreSixes(dice);
        assertEquals(sumOfAllDice, score);
    }

    @Test
    public void GivenNoSixesThenSixesCategoryReturnsZero(){
        final int doesNotMeetCategoryRequirements = 0;
        dice = yahtzee.populateDice(1, 1, 1, 1, 1);
        int score = yahtzee.scoreSixes(dice);
        assertEquals(doesNotMeetCategoryRequirements, score );
    }

    @Test
    public void GivenPairThenPairCategoryReturnsSumOfTopPair(){
        final int sumOfPairDice = 8;
        dice = yahtzee.populateDice(3, 3, 3, 4, 4);
        int score = yahtzee.scorePair(dice);
        assertEquals(sumOfPairDice, score);
    }

    @Test
    public void GivenPairThenPairCategoryReturnsSumOfPair(){
        final int sumOfPairDice = 6;
        dice = yahtzee.populateDice(2, 5, 3, 3, 4);
        int score = yahtzee.scorePair(dice);
        assertEquals(sumOfPairDice, score);
    }

    @Test
    public void GivenTwoPairThenPairCategoryReturnsSumOfHighestPair(){
        final int sumOfPairDice = 10;
        dice = yahtzee.populateDice(3, 3, 5, 5, 4);
        int score = yahtzee.scorePair(dice);
        assertEquals(sumOfPairDice, score);
    }

    @Test
    public void GivenTwoPairsThenTwoPairsCategoryReturnsSumOfHighestPairs(){
        final int sumOfPairDice = 16;
        dice = yahtzee.populateDice(3, 3, 5, 5, 4);
        int score = yahtzee.scoreTwoPairs(dice);
        assertEquals(sumOfPairDice, score);
    }

    @Test
    public void GivenOnePairThenTwoPairsCategoryReturns0(){
        final int sumOfPairDice = 0;
        dice = yahtzee.populateDice(1, 2, 5, 5, 4);
        int score = yahtzee.scoreTwoPairs(dice);
        assertEquals(sumOfPairDice, score);
    }

    @Test
    public void GivenThreeOfAKindThenThreeOfAKindCategoryReturnsSumOfThreeOfAKind(){
        final int sumOfThreeOfAKindDice = 15;
        dice = yahtzee.populateDice(1, 2, 5, 5, 5);
        int score = yahtzee.scoreThreeOfAKind(dice);
        assertEquals(sumOfThreeOfAKindDice, score);
    }

    @Test
    public void GivenFourOfAKindThenFourOfAKindCategoryReturnsSumOfQuad() {
        final int sumOfQuad = 16;
        dice = yahtzee.populateDice(4, 4, 4, 1, 4);
        int score = yahtzee.scoreFourOfAKind(dice);
        assertEquals(sumOfQuad, score);
    }

    @Test
    public void GivenSmallStraightThenSmallStraightCategoryReturns15() {
        final int sumSmallStraight = 15;
        dice = yahtzee.populateDice(1, 2, 3, 5, 4);
        int score = yahtzee.scoreSmallStraight(dice);
        assertEquals(sumSmallStraight, score);
    }

    @Test
    public void GivenLargeStraightThenLargeStraightCategoryReturns20() {
        final int sumLargeStraight = 20;
        dice = yahtzee.populateDice(2, 3, 4, 5, 6);
        int score = yahtzee.scoreLargeStraight(dice);
        assertEquals(sumLargeStraight, score);
    }

    @Test
    public void GivenPairAndTripleThenFullHouseReturnsSumOfAllDice(){
        final int sumFullHouse = 8;
        dice = yahtzee.populateDice(1, 2, 1, 2, 2);
        int score = yahtzee.scoreFullHouse(dice);
        assertEquals(sumFullHouse, score);

    }
}
